#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_WORDS 1000
#define MAX_WORD_LENGTH 100

// Função para trocar duas palavras
void swap(char *word1, char *word2) {
    char temp[MAX_WORD_LENGTH];
    strcpy(temp, word1);
    strcpy(word1, word2);
    strcpy(word2, temp);
}

// Função de ordenação usando o algoritmo Bubble Sort
void bubbleSort(char words[MAX_WORDS][MAX_WORD_LENGTH], int n) {
    int i, j;
    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (strcmp(words[j], words[j + 1]) > 0) {
                swap(words[j], words[j + 1]);
            }
        }
    }
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Uso: %s arquivo_entrada.txt\n", argv[0]);
        return 1;
    }

    char *inputFileName = argv[1];
    char outputFileName[100];
    sprintf(outputFileName, "%s_ordenado.txt", inputFileName);

    FILE *inputFile = fopen(inputFileName, "r");
    if (!inputFile) {
        printf("Erro ao abrir o arquivo de entrada.\n");
        return 1;
    }

    char words[MAX_WORDS][MAX_WORD_LENGTH];
    int numWords = 0;

    while (numWords < MAX_WORDS && fscanf(inputFile, "%s", words[numWords]) != EOF) {
        numWords++;
    }

    fclose(inputFile);

    bubbleSort(words, numWords);

    FILE *outputFile = fopen(outputFileName, "w");
    if (!outputFile) {
        printf("Erro ao criar o arquivo de saída.\n");
        return 1;
    }

    for (int i = 0; i < numWords; i++) {
        fprintf(outputFile, "%s\n", words[i]);
    }

    fclose(outputFile);

    printf("Palavras ordenadas foram salvas em %s\n", outputFileName);

    return 0;
}
